# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  COVERITY_TOOL_HOME: $(Agent.BuildDirectory)/cov-analysis
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

trigger:
- master
 

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    cd $(Agent.BuildDirectory)
    curl -s -L --user admin:$(COVERITY_AUTHKEY) -o license.dat $(COVERITY_URL)/downloadFile.htm?fn=license.dat
    curl -s -L --user admin:$(COVERITY_AUTHKEY) $(COVERITY_URL)/downloadFile.htm?fn=cov-analysis-linux64-2020.06.tar.gz | tar -xvzf -
    mv cov-analysis-linux64-2020.06 cov-analysis
    cp license.dat ./cov-analysis/bin
    

  displayName: 'Coverity Installed'

- script: $(COVERITY_TOOL_HOME)/bin/cov-configure --java
  displayName: 'Configure java for coverity'
 
    


- task: synopsys-coverity@1
  inputs:
    coverityService: 'Coverity-Server'
    projectName: 'Test'
    streamName: 'Test-stream'
    checkIssues: true
    issueView: 'High Outstanding Issues'
    issueStatus: 'unstable'
    coverityBuildDirectory: '$(Build.Repository.LocalPath)'
    buildCommand: 'mvn -Drat.skip=true -DskipTests=true package'
    allowUntrusted: true
    coverityRunType: 'buildanalyzecommit'
    customCommandArgs: true
    covAnalyzeArgs: '--all --webapp-security --webapp-security-aggressiveness-level high'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
